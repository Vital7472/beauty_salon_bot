"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥: /start, /menu, /help.
–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞.
"""

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from database import (
    add_user, get_user_by_referral_code, add_bonus_points, get_user,
    parse_utm_from_start_param, save_user_utm, update_utm_campaign_stats
)
from config import REFERRAL_BONUS

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)


def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é
    """
    keyboard = [
        [InlineKeyboardButton("üíá‚Äç‚ôÄÔ∏è –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ —Å–∞–ª–æ–Ω", callback_data="salon_booking")],
        [InlineKeyboardButton("üíê –ó–∞–∫–∞–∑–∞—Ç—å —Ü–≤–µ—Ç—ã", callback_data="flowers_shop")],
        [InlineKeyboardButton("üíé –ü–æ–¥–ø–∏—Å–∫–∏ –∏ –∫–∞—Ä—Ç—ã", callback_data="subscriptions")],
        [InlineKeyboardButton("üéÅ –ö—É–ø–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç", callback_data="buy_certificate")],
        [InlineKeyboardButton("üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
        [InlineKeyboardButton("üì∏ –ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã", callback_data="gallery")],
        [InlineKeyboardButton("‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="leave_review")],
        [InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É", callback_data="contact_support")]
    ]

    return InlineKeyboardMarkup(keyboard)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞.

    Args:
        update: –û–±—ä–µ–∫—Ç Update
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
    """
    try:
        user = update.effective_user
        user_id = user.id
        username = user.username
        first_name = user.first_name

        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (@{username})")

        # –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ deep link
        start_param = context.args[0] if context.args and len(context.args) > 0 else None

        # –ü–∞—Ä—Å–∏—Ç—å UTM-–º–µ—Ç–∫–∏ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
        utm_params = parse_utm_from_start_param(start_param)

        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö
        referred_by = None
        if start_param:
            logger.info(f"–ü–æ–ª—É—á–µ–Ω start –ø–∞—Ä–∞–º–µ—Ç—Ä: {start_param}")

            # –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ (—Ñ–æ—Ä–º–∞—Ç REF...)
            if start_param.startswith('REF'):
                # –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É
                referred_by = get_user_by_referral_code(start_param)

                if referred_by:
                    logger.info(f"–ù–∞–π–¥–µ–Ω —Ä–µ—Ñ–µ—Ä–µ—Ä: {referred_by}")
                else:
                    logger.warning(f"–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ {start_param} –Ω–µ –Ω–∞–π–¥–µ–Ω")

        # –ü–æ–ø—ã—Ç–∞—Ç—å—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        is_new_user = add_user(user_id, username, first_name, referred_by)

        # –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å UTM-–º–µ—Ç–∫–∏ –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if is_new_user:
            try:
                # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å UTM-–º–µ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                save_user_utm(user_id, utm_params)
                logger.info(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω—ã UTM-–º–µ—Ç–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {utm_params['source_type']}")

                # –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∫–∞–º–ø–∞–Ω–∏–∏
                if utm_params['source_type'] == 'utm' and start_param:
                    update_utm_campaign_stats(start_param, 'registration')
                    logger.info(f"–û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏: {start_param}")

            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è UTM-–º–µ—Ç–æ–∫: {e}")

        # –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–µ—Ä
        if is_new_user and referred_by:
            try:
                # –ù–∞—á–∏—Å–ª–∏—Ç—å –±–æ–Ω—É—Å—ã —Ä–µ—Ñ–µ—Ä–µ—Ä—É
                add_bonus_points(
                    referred_by,
                    REFERRAL_BONUS,
                    f"–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞: –ø—Ä–∏–≥–ª–∞—Å–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {first_name}"
                )

                # –ù–∞—á–∏—Å–ª–∏—Ç—å –±–æ–Ω—É—Å—ã –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                add_bonus_points(
                    user_id,
                    REFERRAL_BONUS,
                    "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ"
                )

                logger.info(f"–ù–∞—á–∏—Å–ª–µ–Ω–æ {REFERRAL_BONUS} –±–æ–Ω—É—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –∏ {referred_by}")

                # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
                try:
                    referrer_data = get_user(referred_by)
                    if referrer_data:
                        await context.bot.send_message(
                            chat_id=referred_by,
                            text=f"üéâ –í–∞—à –¥—Ä—É–≥ {first_name} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ!\n"
                                 f"+{REFERRAL_BONUS} –±–æ–Ω—É—Å–æ–≤ –Ω–∞ –≤–∞—à —Å—á—ë—Ç!"
                        )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–µ—Ä—É: {e}")

            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–æ–≤: {e}")

        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        welcome_text = (
            f"üå∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º:\n"
            "‚Ä¢ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ —Å–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã\n"
            "‚Ä¢ –ó–∞–∫–∞–∑–∞—Ç—å –±—É–∫–µ—Ç —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π\n"
            "‚Ä¢ –ö—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç\n"
            "‚Ä¢ –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )

        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
        await update.message.reply_text(
            welcome_text,
            reply_markup=get_main_menu_keyboard()
        )

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ª—É—á–∏–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /start: {e}")
        await update.message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.

    Args:
        update: –û–±—ä–µ–∫—Ç Update
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
    """
    try:
        menu_text = "üå∏ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:"
        keyboard = get_main_menu_keyboard()

        # –ï—Å–ª–∏ –≤—ã–∑–≤–∞–Ω–æ –∏–∑ callback query
        if update.callback_query:
            query = update.callback_query
            await query.answer()

            await query.edit_message_text(
                menu_text,
                reply_markup=keyboard
            )

            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (callback)")

        # –ï—Å–ª–∏ –≤—ã–∑–≤–∞–Ω–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        else:
            await update.message.reply_text(
                menu_text,
                reply_markup=keyboard
            )

            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –≤—ã–∑–≤–∞–ª /menu")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ menu: {e}")


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help.
    –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞.

    Args:
        update: –û–±—ä–µ–∫—Ç Update
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
    """
    try:
        help_text = (
            "üìñ –ü–û–ú–û–©–¨\n\n"
            "üîπ /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "üîπ /menu - –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é\n"
            "üîπ /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
            "üíá‚Äç‚ôÄÔ∏è –°–ê–õ–û–ù –ö–†–ê–°–û–¢–´:\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É, –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è.\n"
            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è.\n\n"
            "üíê –¶–í–ï–¢–´:\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –±—É–∫–µ—Ç –∏–ª–∏ –∑–∞–∫–∞–∂–∏—Ç–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π.\n"
            "–î–æ—Å—Ç–∞–≤–∫–∞ –ë–ï–°–ü–õ–ê–¢–ù–û –æ—Ç 3000‚ÇΩ.\n\n"
            "üéÅ –ë–û–ù–£–°–´:\n"
            "–ü–æ–ª—É—á–∞–π—Ç–µ 5% –±–æ–Ω—É—Å–∞–º–∏ –æ—Ç –ø–æ–∫—É–ø–æ–∫.\n"
            "–û–ø–ª–∞—á–∏–≤–∞–π—Ç–µ –¥–æ 50% –±–æ–Ω—É—Å–∞–º–∏.\n\n"
            "üë• –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –ü–†–û–ì–†–ê–ú–ú–ê:\n"
            "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–≥–∞ - –ø–æ–ª—É—á–∏—Ç–µ –ø–æ 500 –±–æ–Ω—É—Å–æ–≤!\n\n"
            "‚ùì –í–æ–ø—Ä–æ—Å—ã? –ù–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!"
        )

        await update.message.reply_text(help_text)

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø—Ä–∞–≤–∫—É")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /help: {e}")


async def coming_soon(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –í—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.

    Args:
        update: –û–±—ä–µ–∫—Ç Update
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
    """
    query = update.callback_query
    await query.answer("–°–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ! üöß", show_alert=True)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –Ω–∞–∂–∞–ª –Ω–∞ –Ω–µ–≥–æ—Ç–æ–≤—É—é –∫–Ω–æ–ø–∫—É: {query.data}")
