"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω —Å —É—á–µ—Ç–æ–º –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

from database import get_user_active_subscription
from utils.helpers import format_price


def calculate_final_price(user_id: int, base_price: int, item_type: str = 'service') -> dict:
    """
    –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ü–µ–Ω—É —Å —É—á–µ—Ç–æ–º —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        base_price: –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞
        item_type: –¢–∏–ø —Ç–æ–≤–∞—Ä–∞ ('service' –∏–ª–∏ 'flower')

    Returns:
        dict: {
            'base_price': int,
            'final_price': int,
            'discount_percent': int,
            'discount_amount': int,
            'subscription_name': str or None,
            'saved': int
        }
    """
    result = {
        'base_price': base_price,
        'final_price': base_price,
        'discount_percent': 0,
        'discount_amount': 0,
        'subscription_name': None,
        'saved': 0
    }

    # –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É
    subscription = get_user_active_subscription(user_id)

    if not subscription:
        return result

    # –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏
    discount_percent = 0
    if item_type == 'service':
        discount_percent = subscription.get('service_discount_percent', 0)
    elif item_type == 'flower':
        discount_percent = subscription.get('flower_discount_percent', 0)

    if discount_percent > 0:
        discount_amount = int(base_price * discount_percent / 100)
        final_price = base_price - discount_amount

        result.update({
            'final_price': final_price,
            'discount_percent': discount_percent,
            'discount_amount': discount_amount,
            'subscription_name': subscription.get('plan_name'),
            'saved': discount_amount
        })

    return result


def calculate_cart_total(user_id: int, cart_items: list, delivery_cost: int = 0) -> dict:
    """
    –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã —Å —É—á–µ—Ç–æ–º –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π.

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cart_items: –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ [{'price': int, 'quantity': int, 'type': 'flower/service'}]
        delivery_cost: –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏

    Returns:
        dict: {
            'subtotal': int,
            'total_discount': int,
            'delivery_cost': int,
            'final_total': int,
            'items_with_discount': list,
            'subscription_name': str or None,
            'total_saved': int
        }
    """
    subscription = get_user_active_subscription(user_id)

    subtotal = 0
    total_discount = 0
    items_with_discount = []

    for item in cart_items:
        item_base = item['price'] * item['quantity']
        item_type = item.get('type', 'flower')

        price_info = calculate_final_price(user_id, item['price'], item_type)

        items_with_discount.append({
            **item,
            'base_price': item['price'],
            'final_price': price_info['final_price'],
            'discount_percent': price_info['discount_percent'],
            'item_discount': price_info['discount_amount'] * item['quantity']
        })

        subtotal += item_base
        total_discount += price_info['discount_amount'] * item['quantity']

    final_total = subtotal - total_discount + delivery_cost

    return {
        'subtotal': subtotal,
        'total_discount': total_discount,
        'delivery_cost': delivery_cost,
        'final_total': final_total,
        'items_with_discount': items_with_discount,
        'subscription_name': subscription.get('plan_name') if subscription else None,
        'total_saved': total_discount
    }


def format_price_summary(pricing_info: dict, show_delivery: bool = True) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–¥–∫—É —Ü–µ–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    Args:
        pricing_info: –†–µ–∑—É–ª—å—Ç–∞—Ç calculate_cart_total()
        show_delivery: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ —Å—Ç—Ä–æ–∫—É –¥–æ—Å—Ç–∞–≤–∫–∏

    Returns:
        str: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    """
    text = f"üí∞ –°—É–º–º–∞: {format_price(pricing_info['subtotal'])}\n"

    if pricing_info['total_discount'] > 0:
        text += f"üéâ –°–∫–∏–¥–∫–∞ ({pricing_info['subscription_name']}): -{format_price(pricing_info['total_discount'])}\n"

    if show_delivery:
        if pricing_info['delivery_cost'] > 0:
            text += f"üöö –î–æ—Å—Ç–∞–≤–∫–∞: {format_price(pricing_info['delivery_cost'])}\n"
        else:
            text += "üöö –î–æ—Å—Ç–∞–≤–∫–∞: –ë–ï–°–ü–õ–ê–¢–ù–û ‚úÖ\n"

    text += "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
    text += f"üíµ –ò—Ç–æ–≥–æ: {format_price(pricing_info['final_total'])}\n"

    if pricing_info['total_saved'] > 0:
        text += f"\nüéÅ –í—ã —Å—ç–∫–æ–Ω–æ–º–∏–ª–∏: {format_price(pricing_info['total_saved'])} –±–ª–∞–≥–æ–¥–∞—Ä—è –ø–æ–¥–ø–∏—Å–∫–µ!\n"

    return text


def get_subscription_benefits_summary(user_id: int) -> str:
    """
    –ü–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        str: –¢–µ–∫—Å—Ç —Å –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è–º–∏
    """
    subscription = get_user_active_subscription(user_id)

    if not subscription:
        return "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏."

    text = f"‚ú® –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞: {subscription['plan_name']}\n\n"
    text += "üéÅ –í–∞—à–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏:\n"

    if subscription.get('service_discount_percent', 0) > 0:
        text += f"‚Ä¢ {subscription['service_discount_percent']}% —Å–∫–∏–¥–∫–∞ –Ω–∞ —É—Å–ª—É–≥–∏ —Å–∞–ª–æ–Ω–∞\n"

    if subscription.get('flower_discount_percent', 0) > 0:
        text += f"‚Ä¢ {subscription['flower_discount_percent']}% —Å–∫–∏–¥–∫–∞ –Ω–∞ —Ü–≤–µ—Ç—ã\n"

    if subscription.get('monthly_flowers_included', 0) > 0:
        used = subscription.get('flowers_used_this_month', 0)
        total = subscription['monthly_flowers_included']
        text += f"‚Ä¢ –ë—É–∫–µ—Ç–æ–≤ –≤ –º–µ—Å—è—Ü: {used}/{total}\n"

    if subscription.get('monthly_service_included'):
        used = "‚úÖ" if subscription.get('service_used_this_month') else "‚ùå"
        text += f"‚Ä¢ –£—Å–ª—É–≥–∞ —Å–∞–ª–æ–Ω–∞ –≤ –º–µ—Å—è—Ü: {used}\n"

    text += f"\nüìÖ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {subscription['end_date']}"

    return text


def can_use_subscription_benefit(user_id: int, benefit_type: str) -> dict:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–∫–∏.

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        benefit_type: –¢–∏–ø –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ ('flower' –∏–ª–∏ 'service')

    Returns:
        dict: {
            'can_use': bool,
            'reason': str or None,
            'subscription': dict or None
        }
    """
    subscription = get_user_active_subscription(user_id)

    if not subscription:
        return {
            'can_use': False,
            'reason': '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏',
            'subscription': None
        }

    if benefit_type == 'flower':
        total = subscription.get('monthly_flowers_included', 0)
        used = subscription.get('flowers_used_this_month', 0)

        if total == 0:
            return {
                'can_use': False,
                'reason': '–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –±—É–∫–µ—Ç—ã',
                'subscription': subscription
            }

        if used >= total:
            return {
                'can_use': False,
                'reason': f'–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ –±—É–∫–µ—Ç—ã –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ ({used}/{total})',
                'subscription': subscription
            }

        return {
            'can_use': True,
            'reason': None,
            'subscription': subscription
        }

    elif benefit_type == 'service':
        if not subscription.get('monthly_service_included'):
            return {
                'can_use': False,
                'reason': '–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Å–ª—É–≥–∏',
                'subscription': subscription
            }

        if subscription.get('service_used_this_month'):
            return {
                'can_use': False,
                'reason': '–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é —É—Å–ª—É–≥—É –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ',
                'subscription': subscription
            }

        return {
            'can_use': True,
            'reason': None,
            'subscription': subscription
        }

    return {
        'can_use': False,
        'reason': '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞',
        'subscription': None
    }
