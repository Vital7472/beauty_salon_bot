"""
–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline –∫–∞–ª–µ–Ω–¥–∞—Ä—è.
–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã.
"""

import calendar
import logging
from datetime import datetime, timedelta
from typing import Tuple
from telegram import InlineKeyboardButton, InlineKeyboardMarkup

from utils.helpers import get_current_datetime

logger = logging.getLogger(__name__)

# –ú–µ—Å—è—Ü—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º
MONTHS_RU = {
    1: "–Ø–Ω–≤–∞—Ä—å", 2: "–§–µ–≤—Ä–∞–ª—å", 3: "–ú–∞—Ä—Ç", 4: "–ê–ø—Ä–µ–ª—å",
    5: "–ú–∞–π", 6: "–ò—é–Ω—å", 7: "–ò—é–ª—å", 8: "–ê–≤–≥—É—Å—Ç",
    9: "–°–µ–Ω—Ç—è–±—Ä—å", 10: "–û–∫—Ç—è–±—Ä—å", 11: "–ù–æ—è–±—Ä—å", 12: "–î–µ–∫–∞–±—Ä—å"
}

# –î–Ω–∏ –Ω–µ–¥–µ–ª–∏ (—Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ)
WEEKDAYS_RU = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]


def create_calendar(year: int = None, month: int = None) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ inline –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã.

    Args:
        year: –ì–æ–¥ (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω - —Ç–µ–∫—É—â–∏–π)
        month: –ú–µ—Å—è—Ü (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω - —Ç–µ–∫—É—â–∏–π)

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º
    """
    try:
        # –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
        now = get_current_datetime()

        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —Ç–µ–∫—É—â–∏–µ –≥–æ–¥/–º–µ—Å—è—Ü
        if year is None:
            year = now.year
        if month is None:
            month = now.month

        # –°–æ–∑–¥–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        keyboard = []

        # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥
        keyboard.append([
            InlineKeyboardButton(
                f"üìÖ {MONTHS_RU[month]} {year}",
                callback_data="ignore"
            )
        ])

        # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ - –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
        weekday_row = [
            InlineKeyboardButton(day, callback_data="ignore")
            for day in WEEKDAYS_RU
        ]
        keyboard.append(weekday_row)

        # –ü–æ–ª—É—á–∏—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –º–µ—Å—è—Ü–∞
        month_calendar = calendar.monthcalendar(year, month)

        # –ó–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞—Ç—ã
        for week in month_calendar:
            row = []
            for day in week:
                if day == 0:
                    # –ü—É—Å—Ç–∞—è —è—á–µ–π–∫–∞
                    row.append(InlineKeyboardButton(" ", callback_data="ignore"))
                else:
                    # –°–æ–∑–¥–∞—Ç—å –¥–∞—Ç—É
                    date = datetime(year, month, day)

                    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –ø—Ä–æ—à–ª–∞ –ª–∏ –¥–∞—Ç–∞
                    if date.date() < now.date():
                        # –ü—Ä–æ—à–µ–¥—à–∞—è –¥–∞—Ç–∞ - –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è
                        row.append(InlineKeyboardButton(
                            f"‚úñÔ∏è{day}",
                            callback_data="ignore"
                        ))
                    else:
                        # –ë—É–¥—É—â–∞—è –¥–∞—Ç–∞ - –∞–∫—Ç–∏–≤–Ω–∞—è
                        callback_data = f"calendar_{year}-{month:02d}-{day:02d}"
                        row.append(InlineKeyboardButton(
                            str(day),
                            callback_data=callback_data
                        ))

            keyboard.append(row)

        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        nav_row = [
            InlineKeyboardButton(
                "‚óÄÔ∏è –ü—Ä–µ–¥",
                callback_data=f"calendar_prev_{year}_{month}"
            ),
            InlineKeyboardButton(
                "–°–ª–µ–¥ ‚ñ∂Ô∏è",
                callback_data=f"calendar_next_{year}_{month}"
            )
        ]
        keyboard.append(nav_row)

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        keyboard.append([
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_services")
        ])

        return InlineKeyboardMarkup(keyboard)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {e}")
        # –í–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥
        return InlineKeyboardMarkup([[
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="salon_booking")
        ]])


def handle_calendar_navigation(callback_data: str, current_year: int, current_month: int) -> Tuple[int, int]:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è.

    Args:
        callback_data: –î–∞–Ω–Ω—ã–µ callback
        current_year: –¢–µ–∫—É—â–∏–π –≥–æ–¥
        current_month: –¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü

    Returns:
        tuple: (–Ω–æ–≤—ã–π_–≥–æ–¥, –Ω–æ–≤—ã–π_–º–µ—Å—è—Ü)
    """
    try:
        if callback_data.startswith("calendar_prev"):
            # –ú–µ—Å—è—Ü –Ω–∞–∑–∞–¥
            if current_month == 1:
                return current_year - 1, 12
            else:
                return current_year, current_month - 1

        elif callback_data.startswith("calendar_next"):
            # –ú–µ—Å—è—Ü –≤–ø–µ—Ä–µ–¥
            if current_month == 12:
                return current_year + 1, 1
            else:
                return current_year, current_month + 1

        # –ï—Å–ª–∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ - –≤–µ—Ä–Ω—É—Ç—å —Ç–µ–∫—É—â–∏–µ
        return current_year, current_month

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {e}")
        return current_year, current_month


def parse_calendar_date(callback_data: str) -> str:
    """
    –ò–∑–≤–ª–µ—á—å –¥–∞—Ç—É –∏–∑ callback_data –∫–∞–ª–µ–Ω–¥–∞—Ä—è.

    Args:
        callback_data: –î–∞–Ω–Ω—ã–µ –≤–∏–¥–∞ "calendar_YYYY-MM-DD"

    Returns:
        str: –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
    """
    try:
        if callback_data.startswith("calendar_"):
            return callback_data.replace("calendar_", "")
        return None
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã: {e}")
        return None


def is_date_available(date_str: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ –¥–∞—Ç–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏.

    Args:
        date_str: –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD

    Returns:
        bool: True –µ—Å–ª–∏ –¥–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
    """
    try:
        date = datetime.strptime(date_str, "%Y-%m-%d")
        now = get_current_datetime()

        # –î–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º
        return date.date() >= now.date()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞—Ç—ã: {e}")
        return False
